// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model account {
  id                  String  @id @default(cuid())
  user_id             String
  type                String
  provider            String
  provider_account_id String
  refresh_token       String? @db.Text
  access_token        String? @db.Text
  expires_at          Int?
  token_type          String?
  scope               String?
  id_token            String? @db.Text
  session_state       String?
  
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  user user @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@unique([provider, provider_account_id])
}

model session {
  id            String   @id @default(cuid())
  session_token String   @unique
  user_id       String
  expires       DateTime
  user          user     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model user {
  id             String    @id @default(cuid())
  name           String?
  email          String    @unique
  email_verified DateTime?
  image          String?
  accounts       account[]
  sessions       session[]
  blogs          blog[]
  
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model verification_token {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model blog {
  id         Int        @id @default(autoincrement())
  author_id  String
  author     user       @relation(fields: [author_id], references: [id])
  title      String
  thumbnail  String?     @unique
  body       String
  created_at DateTime   @default(now())
  updated_at DateTime   @updatedAt
  deleted_at DateTime?
  tags       tag[]
  blog_tag   blog_tag[]
}

model tag {
  id        Int        @id @default(autoincrement())
  type      Int
  type_name String
  blogs     blog[]
  blog_tag  blog_tag[]
}

model blog_tag {
  blog_id    Int
  tag_id     Int       @unique
  created_at DateTime  @default(now())
  deleted_at DateTime?
  blog       blog      @relation(fields: [blog_id], references: [id])
  tag        tag       @relation(fields: [tag_id], references: [id])

  @@id([blog_id, tag_id])
}

model contact {
  id         Int      @id @default(autoincrement())
  name       String
  email      String   @unique
  tel        String
  title      String
  body       String?
  created_at DateTime @default(now())
}
