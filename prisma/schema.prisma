// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  blogs         Blog[]
}

model VerificationToken {
  identifier  String
  token       String    @unique
  expires     DateTime

  @@unique([identifier, token])
}

model Blog {
  id        Int       @id @default(autoincrement())
  authorId  String
  author    User      @relation(fields: [authorId], references: [id])
  title     String
  body      String
  createdAt DateTime  @default(now())
  tags      BlogTag[]
}

model Tag {
  id        Int       @id @default(autoincrement())
  type      Int
  typeName  String
  blogs     BlogTag[]
}

model BlogTag {
  blogId  Int
  tagId   Int   @unique
  blog    Blog  @relation(fields: [blogId], references: [id])
  tag     Tag   @relation(fields: [tagId], references: [id])
  
  @@id([blogId, tagId])
}

model Contact {
  id          Int       @id @default(autoincrement())
  name        String
  email       String    @unique
  tel         String
  title       String
  body        String?
  createdAt   DateTime  @default(now())
}
